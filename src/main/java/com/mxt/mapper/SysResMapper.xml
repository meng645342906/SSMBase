<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mxt.dao.SysResMapper">
    <resultMap id="BaseResultMap" type="com.mxt.bean.SysRes">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="pid" jdbcType="INTEGER" property="pid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="des" jdbcType="VARCHAR" property="des" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="icon_cls" jdbcType="VARCHAR" property="iconCls" />
        <result column="seq" jdbcType="INTEGER" property="seq" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="modifydate" jdbcType="VARCHAR" property="modifydate" />
        <result column="enabled" jdbcType="INTEGER" property="enabled" />
        <result column="level" jdbcType="INTEGER" property="level" />
        <result column="selected" jdbcType="INTEGER" property="selected" />
    </resultMap>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.mxt.bean.SysRes">
        update sys_res
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                des = #{des,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="iconCls != null">
                icon_cls = #{iconCls,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="modifydate != null">
                modifydate = #{modifydate,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPara" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from sys_res where 1 = 1
            <if test="para != null">
                ${para}
            </if>
            <if test="orderBy != null">
                ${orderBy}
            </if>
            <if test="page != null">
                ${page}
            </if>
    </select>
    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from sys_res
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from sys_res
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.mxt.bean.SysRes">
        insert into sys_res (id, pid, name, des, url, icon_cls, seq, type, modifydate, enabled, level)
        values (#{id,jdbcType=INTEGER},
                #{pid,jdbcType=INTEGER},
                #{name,jdbcType=VARCHAR},
                #{des,jdbcType=VARCHAR},
                #{url,jdbcType=VARCHAR},
                #{iconCls,jdbcType=VARCHAR},
                #{seq,jdbcType=INTEGER},
                #{type,jdbcType=INTEGER},
                #{modifydate,jdbcType=VARCHAR},
                #{enabled,jdbcType=INTEGER},
                #{level,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.mxt.bean.SysRes">
        update sys_res
        set pid        = #{pid,jdbcType=INTEGER},
            name       = #{name,jdbcType=VARCHAR},
            des        = #{des,jdbcType=VARCHAR},
            url        = #{url,jdbcType=VARCHAR},
            icon_cls   = #{iconCls,jdbcType=VARCHAR},
            seq        = #{seq,jdbcType=INTEGER},
            type       = #{type,jdbcType=INTEGER},
            modifydate = #{modifydate,jdbcType=VARCHAR},
            enabled    = #{enabled,jdbcType=INTEGER},
            level      = #{level,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               pid,
               name,
               des,
               url,
               icon_cls,
               seq,
               type,
               modifydate,
               enabled,
               level
        from sys_res
        where id = #{id,jdbcType=INTEGER}
        order by seq asc
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               pid,
               name,
               des,
               url,
               icon_cls,
               seq,
               type,
               modifydate,
               enabled,
               level
        from sys_res
        order by seq asc
    </select>
    
    <select id="findResByRoleId" resultMap="BaseResultMap">
        select *
        from sys_res
        where id in (select res_id from sys_role_res where role_id in(#{arg0}))
        <if test=" arg1 != null">
            and type = #{arg1}
        </if>
        and enabled = 1
        order by seq asc
    </select>
    
    <select id="findResByAdmin" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from sys_res where 1=1
        <if test="type != null">
            and type=#{type}
        </if>
        and enabled=1 order by seq asc
    </select>
    
    <select id="getByUrl" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from sys_res
        where url = #{url}
    </select>
    
    
    <select id="getSysMenus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT *, (CASE
                       WHEN re.id IN (SELECT rr.res_id from sys_role_res rr WHERE rr.role_id = #{roleId}) THEN 1
                       ELSE 0 END) as selected
        FROM sys_res re
        where re.enabled = 1
        order by re.seq asc
    </select>

</mapper>